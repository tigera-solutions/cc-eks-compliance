apiVersion: v1
kind: Namespace
metadata:
  name: wordpress
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-pass
  namespace: wordpress
type: Opaque
data:
  password: VGlnZXJhQDEyMw==
---
apiVersion: v1
kind: Pod
metadata:
  name: client
  labels:
    app: client
  namespace: wordpress
spec:
  containers:
  - name: netshoot
    image: nicolaka/netshoot:latest
    command: [ "/bin/bash", "-c"]
    args: [ "while true; do curl -m3 http://wordpress; sleep 3; done;" ]
---
apiVersion: v1
kind: Service
metadata:
  name: db-mysql
  labels:
    app: wordpress
  namespace: wordpress
spec:
  type: ClusterIP
  ports:
  - name: "db-mysql-service"
    port: 3306
    targetPort: 3306
  selector:
    app: db
    tier: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-mysql
  labels:
    app: db
  namespace: wordpress
spec:
  selector:
    matchLabels:
      app: db
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: db
        tier: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-external
  labels:
    app: wordpress
  namespace: wordpress
  annotations:
    projectcalico.org/l7-logging: 'true'
spec:
  ports:
  - name: "wordpress-service"
    port: 80
    targetPort: 80
  selector:
    app: wordpress
    tier: frontend
  type: LoadBalancer
  externalTrafficPolicy: Local
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
  namespace: wordpress
  annotations:
    projectcalico.org/l7-logging: 'true'
spec:
  ports:
  - name: "wordpress-service"
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: wordpress
    tier: frontend
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
  namespace: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - image: wordpress:4.8-apache
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: db-mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-storage
        emptyDir: {}